name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup PNPM
      uses: pnpm/action-setup@v4
      with:
        version: 10.15.1

    - name: Install dependencies
      run: pnpm install

    - name: Rebuild better-sqlite3 for Electron
      run: pnpm run rebuild

    - name: Build TypeScript
      run: pnpm run build

    - name: Build CSS
      run: pnpm run build-css-prod

    - name: Package application
      run: pnpm run pack
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cursor-overlay-macos-${{ github.run_number }}
        path: release/
        retention-days: 30

    - name: Get short SHA
      if: github.ref == 'refs/heads/main'
      id: short_sha
      run: echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

    - name: Create auto release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.short_sha.outputs.sha_short }}
        release_name: Release v${{ steps.short_sha.outputs.sha_short }}
        draft: false
        prerelease: false
        body: |
          Auto release from main branch
          
          Commit: ${{ github.sha }}
          Run: #${{ github.run_number }}

    - name: Create app archive
      if: github.ref == 'refs/heads/main'
      run: cd "release/mac-arm64" && zip -r "Cursor-Overlay-arm64.zip" "Cursor Overlay.app"

    - name: Upload App to Release
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/mac-arm64/Cursor-Overlay-arm64.zip
        asset_name: Cursor-Overlay-arm64.zip
        asset_content_type: application/zip
